"""Add blacklist functionality

Revision ID: b2776e19bfa4
Revises: d1e61d9c1ca6
Create Date: 2025-07-05 20:20:40.013399

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b2776e19bfa4'
down_revision: Union[str, None] = 'd1e61d9c1ca6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklisted_users',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('date_blacklisted', sa.BigInteger(), nullable=False),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('is_actively_blacklisted', sa.Boolean(), nullable=True),
    sa.Column('date_unblacklisted', sa.BigInteger(), nullable=True),
    sa.Column('why_unblacklisted', sa.String(), nullable=True),
    sa.CheckConstraint("(is_actively_blacklisted = TRUE) OR (why_unblacklisted IS NOT NULL AND why_unblacklisted != '')", name='check_unblacklisted_reason'),
    sa.PrimaryKeyConstraint('user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('blacklisted_users')
    # ### end Alembic commands ###
